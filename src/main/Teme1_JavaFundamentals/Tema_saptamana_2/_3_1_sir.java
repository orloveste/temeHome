package main.Teme1_JavaFundamentals.Tema_saptamana_2;

import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class _3_1_sir {
    public int[]myArray;
    public Scanner input = new Scanner(System.in);

    public static void main(String[] args) {
        _3_1_sir obiect = new _3_1_sir();
        //System.out.println(obiect.metoda_8_WithSort(obiect));
    }
    public _3_1_sir(int[]myArray) {
        this.myArray = myArray;
    }
    public _3_1_sir() {
        //Scanner input = new Scanner(System.in);
        System.out.print("Introduceti dimensiunea sirului: "); //"Please enter the array size: "
        int myArrayLenght = input.nextInt();
        this.myArray = new int[myArrayLenght];
        //int[]myArray = new int[myArrayLenght];
        System.out.print("\n Introduceti elementele sirului: \n");//("\nPlease enter your array elements :\n")
        for(int i = 0; i < myArrayLenght; i++) {
            myArray[i] = input.nextInt();
        }
        input.close();
    }
    public int[] _3_1_sir(int myArrayLenght) {
    //public _3_1_sir(int myArrayLenght) {
        //Scanner input = new Scanner(System.in);
        Random generateArray = new Random();
        int[]myArray = new int[myArrayLenght];
        System.out.println("Introduceti valoarea maxima aleatorie: ");//"Please enter the random maximum value :"
        int maxRandom = input.nextInt();
        for (int i = 0; i < myArrayLenght; i++) {
            myArray[i] = generateArray.nextInt(maxRandom);
        }
        this.myArray = myArray;
        System.out.println(Arrays.toString(myArray));
        return myArray;
    }
    public void metoda_1(_3_1_sir param) {
        System.out.println("This your array generated by your class constructors: "
                + Arrays.toString(myArray));
    }
    public void metoda_2(_3_1_sir param) {
        int[] myArray = param.myArray;
        System.out.println();
        for (int i = 0; i < myArray.length; i+=3) {
            System.out.print(myArray[i] + " ");
        }
    }
    public void metoda_3(_3_1_sir param) {
        int count = 0;
        //int[] myArray = param.myArray;
        //for (int i = 0; i < myArray.length - 1; i++) {
        for (int i = 1; i < myArray.length; i++) {
            //if (myArray[i] < myArray[i+1]) {
            if (myArray[i] != myArray[i - 1])
                System.out.println("your arrays has identical elements! ");
                //break;
               else count++;
        }
        if (count == myArray.length - 1)
            System.out.println("your arrays has different elements! ");
    }
    public boolean metoda_4(int keyToFind) {
        //int[]myArray = this.myArray;
        boolean result = false;
        //for (int i : myArray) {
        for (int i : this.myArray) {
            if (i == keyToFind) {
                result = true;
                break;
            }
        }
        System.out.println(result);
        return result;
    }
    public int metoda_5() {
        Arrays.sort(myArray);
        System.out.println("The smallest element of you array is: " + myArray[0]);
        return myArray[0];
    }
    public void metoda_6(int keyToCompare) {
        int count = 0;
        for (int i : this.myArray) {
            //if (myArray[i] == keyToCompare)
            if (i == keyToCompare)
                count++;
        }
        System.out.println("We find your key in the array " + count + " times.");
    }
    public void metoda_7() {
        int arraySum = 0;
        for (int i : this.myArray) {
            arraySum += i;
        }
        System.out.println("This arithmetic average of array elements is: " +
                (double)arraySum/myArray.length);
    }
    public boolean metoda_8(_3_1_sir param) {
            int[] myArray = param.myArray;
            boolean flag = false;
            for (int i = 0; i < myArray.length-1; i++) {
                if (myArray[i] < myArray[i+1])
                    flag = true;
                else {
                    flag = false;
                    break;
                }
            }
            return flag;
    }   /*public boolean metoda_8_Apache(_3_1_sir param) {
            int[] myArray = param.myArray;
            //return ArraysUtils.isSorted(myArray);
    } */
    public boolean metoda_8_WithSort(int[]myArray) {
        int[] myTempArray = Arrays.copyOf(myArray, myArray.length);
        Arrays.sort(myArray);
        System.out.println(Arrays.toString(myTempArray));
        System.out.println(Arrays.toString(myArray));
            //if (myTempArray == myArray) {
            if (Arrays.equals(myTempArray, myArray))
                return true;
            else
                return false;
    }
}
